#import "./fragments/basicComment.graphql"
#import "./fragments/basicCollection.graphql"
#import "./fragments/basicResource.graphql"
#import "./fragments/basicCommunity.graphql"
#import "./fragments/basicUser.graphql"
#import "../HOC/modules/ActivityPreview/getActivityPreview.graphql"

query getCommunityQuery($communityId: String!, $limit: Int, $end: [Cursor!]) {
    community(communityId: $communityId) {
        id
        canonicalUrl
        preferredUsername
        name
        summary
        icon{
 id, url }

        createdAt
        creator { id }
        updatedAt
        lastActivity
        isLocal
        isPublic
        isDisabled
        myFollow { id }
        outbox(limit: $limit, after: $end) {
            pageInfo { startCursor endCursor }
            edges {
                    ...ActivityPreview
                    # id
                    # canonicalUrl
                    # verb
                    # isLocal
                    # isPublic
                    # createdAt
                    # user { ...BasicUser }
                    # context {
                    #     __typename
                    #     ... on Resource   { ...BasicResource   }
                    #     ... on Community  { ...BasicCommunity  }
                    #     ... on Collection { ...BasicCollection }
                    #     ... on Comment    { ...BasicCommentWithInReplyTo    }
                    # }       
            }
        }
        threads(limit: $limit, after: $end) {
            pageInfo { startCursor endCursor }
            edges {
                id
                canonicalUrl
                isLocal
                isPublic
                isHidden
                createdAt
                updatedAt
                lastActivity
                context {
                    __typename
                    ... on Community { id icon{
 id, url }
 name}
                    ... on Collection { id icon{
 id, url }
 name}
                    ... on Resource { id icon{
 id, url }
 name}
            
                }
                myFollow { id }
                comments {
                    totalCount
                    edges {
                        ...BasicCommentWithInReplyTo
                    }
                } 
            }
        }
        followers {
            pageInfo { startCursor endCursor }
            totalCount
            edges {
                id
                canonicalUrl
                isLocal
                isPublic
                creator {
                    id
                    icon{
 id, url }

                }
            }
        }
        collections {
            pageInfo { startCursor endCursor }
            totalCount
            edges {
                id
                canonicalUrl
                preferredUsername
                name
                summary
                icon{
 id, url }

                myFollow { id }
                likers     { totalCount}
                followers { totalCount }
                resources { totalCount }
                threads   { totalCount }
                # outbox    { totalCount }
            }
        }
    }
}
